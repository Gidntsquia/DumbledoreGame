using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SharpMovement : MonoBehaviour
{
    public Transform groundCheck;
    public Transform player;
    public Rigidbody rb;
    public float movementSpeed = 10f;
    public static float maxSpeed = 10f;

    public Vector3 jumpPower = new Vector3(0, 1000, 0);
    public float groundDistance = 0.1f;
    public LayerMask groundMask;
    bool grounded = true;
    bool jumpFlag = false;



    float timeElapsedSinceJump;
    Vector3 xSpeed;
    float ySpeed = 0;
    Vector3 zSpeed;
    float fasterMaxSpeed = maxSpeed * 1.5f;
    float normalMaxSpeed = maxSpeed;

    // Start is called before the first frame update
    void Start()
    {

    }

    void jump()
    {
        rb.AddForce(jumpPower);
    }

    // Update is called once per frame
    void Update()
    {
        grounded = Physics.CheckSphere(groundCheck.position, groundDistance, groundMask);
        xSpeed = rb.GetRelativePointVelocity(player.position);
        ySpeed = rb.velocity.y;
        zSpeed = rb.GetRelativePointVelocity(player.position);
        Debug.Log(xSpeed);
        if (xSpeed.z < maxSpeed)
        {
            maxSpeed = normalMaxSpeed;
            if (Input.GetKey(KeyCode.LeftShift) && Input.GetKey("w"))
            {
                rb.AddRelativeForce(Vector3.forward * movementSpeed * 1.5f * Time.deltaTime);
                maxSpeed = fasterMaxSpeed;
            }
            else if (Input.GetKey("w"))
            {
                rb.AddRelativeForce(Vector3.forward * movementSpeed * Time.deltaTime);
            }
        }

        if (xSpeed.z > -maxSpeed)
        {
            if (Input.GetKey("s"))
            {
                rb.AddRelativeForce(Vector3.back * movementSpeed * Time.deltaTime);
            }
        }
        if (zSpeed.x > -maxSpeed)
        {
            if (Input.GetKey("a"))
            {
                rb.AddRelativeForce(Vector3.left * movementSpeed * Time.deltaTime);
            }
        }
        if (zSpeed.x < maxSpeed)
        {
            if (Input.GetKey("d"))
            {
                rb.AddRelativeForce(Vector3.right * movementSpeed * Time.deltaTime);
            }
        }
        if (Input.GetKey(KeyCode.Space) && grounded && !jumpFlag)
        {
            jump();
            jumpFlag = true;
        }
        else
        {
            jumpFlag = false;
        }
        if (grounded)
        {
            ySpeed = 0;
        }
        
    }
}
    
